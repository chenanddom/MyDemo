#SpringMVC

#   配置步骤：
        
        1.web.xml文件配置如下
        
        <?xml version="1.0" encoding="UTF-8"?>
        <web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
                 version="3.1">
            <display-name>Archetype Created Web Application</display-name>
            <welcome-file-list>
                <welcome-file>index.jsp</welcome-file>
            </welcome-file-list>
        
        
            <listener>
                <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
            </listener>
        
            <listener>
                <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
            </listener>
            <filter>
                <filter-name>encoding</filter-name>
                <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
                <init-param>
                    <param-name>encoding</param-name>
                    <param-value>UTF-8</param-value>
                </init-param>
            </filter>
        
            <filter-mapping>
                <filter-name>encoding</filter-name>
                <url-pattern>/*</url-pattern>
            </filter-mapping>
            <servlet>
                <servlet-name>dispatcher</servlet-name>
                <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
                <init-param>
                    <param-name>namespace</param-name>
                    <param-value>dispatcher-servlet</param-value>
                </init-param>
            </servlet>
            <servlet-mapping>
                <servlet-name>dispatcher</servlet-name>
                <url-pattern>/</url-pattern>
            </servlet-mapping>
        </web-app>

          2.添加dispatcher-servlet.xml和applicationContext.xml                              
            dispatcher-servlet.xml配置如下：
            <?xml version="1.0" encoding="UTF-8"?>
            <beans xmlns="http://www.springframework.org/schema/beans"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xmlns:context="http://www.springframework.org/schema/context"
                   xmlns:mvc="http://www.springframework.org/schema/mvc"
                   xmlns:util="http://www.springframework.org/schema/util"
                   xsi:schemaLocation="http://www.springframework.org/schema/beans
                   http://www.springframework.org/schema/beans/spring-beans.xsd
                   http://www.springframework.org/schema/context
                    http://www.springframework.org/schema/context/spring-context-3.0.xsd
                   http://www.springframework.org/schema/mvc
                   http://www.springframework.org/schema/mvc/spring-mvc.xsd
                   http://www.springframework.org/schema/util
                   http://www.springframework.org/schema/util/spring-util-3.0.xsd ">
            
                <!-- 开启注解模式驱动 ,打开了注解，那么就可以不需要配置
            
                <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>
                <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/>
                -->
            
            
                <mvc:annotation-driven></mvc:annotation-driven>
                <!-- 扫包 -->
                <context:component-scan base-package="com.dom"></context:component-scan>
            
                <!-- 视图渲染 jsp/freemaker/velocity-->
                <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <!-- 制定页面存放的路径 -->
                    <property name="prefix" value="/WEB-INF/pages/"></property>
                    <!-- 文件的后缀 -->
                    <property name="suffix" value=".jsp"></property>
                </bean>
            </beans>
            
            applicationContext.xml配置如下：
            <?xml version="1.0" encoding="UTF-8"?>
            <beans xmlns="http://www.springframework.org/schema/beans"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
                   xmlns:context="http://www.springframework.org/schema/context"
                   xmlns:tx="http://www.springframework.org/schema/tx"
                   xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p"
                   xsi:schemaLocation="http://www.springframework.org/schema/beans
              http://www.springframework.org/schema/beans/spring-beans.xsd
              http://www.springframework.org/schema/aop
              http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
              http://www.springframework.org/schema/tx
              http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
              http://www.springframework.org/schema/context
              http://www.springframework.org/schema/context/spring-context-4.0.xsd
              http://www.springframework.org/schema/util
              http://www.springframework.org/schema/util/spring-util-4.0.xsd
              ">
            </beans>

          
          Controller添加接口，内容如下:
          
          import org.springframework.stereotype.Controller;
          import org.springframework.web.bind.annotation.RequestMapping;
          import org.springframework.web.servlet.ModelAndView;
          import javax.servlet.http.HttpServletRequest;
          import java.util.logging.Level;
          import java.util.logging.Logger;
          
          /**
           * Created with IntelliJ IDEA.
           * Description:
           * User: chendom
           * Date: 2018-03-16
           * Time: 12:55
           */
          @Controller
          public class MyController {
          Logger logger =Logger.getLogger(MyController.class.getName());
              @RequestMapping("/view")
              public ModelAndView view(HttpServletRequest request){
                  logger.log(Level.INFO,"------------------------------------------------------");
                  String path = request.getParameter("path") + "";
                  ModelAndView mav = new ModelAndView();
                  String contextPath = request.getContextPath();
                  mav.addObject("contextPath" , contextPath);
                  mav.setViewName(path);
                  return mav;
              }
              @RequestMapping("/getData")
              public ModelAndView getModel(HttpServletRequest request){
                  ModelAndView mav = new ModelAndView();
                  String path = request.getParameter("path") + "";
                  String contextPath = request.getContextPath();
                  mav.addObject("key","this is test content");
                  mav.addObject("contextPath" , contextPath);
                  mav.setViewName(path);
                  return mav;
              }
          }
  
